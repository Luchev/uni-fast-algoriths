cpalgorithmspageauthorssuffixautomatontableofcontentsdefinitionofasuffixautomatonsubstringpropertyexamplesofconstructedsuffixautomataconstructioninlineartimeendpositionsendpossuffixlinkslinkrecapalgorithmcorrectnesslinearnumberofoperationsimplementationadditionalpropertiesnumberofstatesnumberoftransitionsapplicationscheckforoccurrencenumberofdifferentsubstringstotallengthofalldifferentsubstringslexicographicallykthsubstringsmallestcyclicshiftnumberofoccurrencesfirstoccurrencepositionalloccurrencepositionsshortestnonappearingstringlongestcommonsubstringoftwostringslargestcommonsubstringofmultiplestringspracticeproblemsasuffixautomatonisapowerfuldatastructurethatallowssolvingmanystringrelatedproblemsforexampleyoucansearchforalloccurrencesofonestringinanotherorcounttheamountofdifferentsubstringsofagivenstringbothtaskscanbesolvedinlineartimewiththehelpofasuffixautomatonintuitivelyasuffixautomatoncanbeunderstoodascompressedformofallsubstringsofagivenstringanimpressivefactisthatthesuffixautomatoncontainsallthisinformationinahighlycompressedformforastringoflengthnitonlyrequiresonmemorymoreoveritcanalsobebuildinontimeifweconsiderthesizekofthealphabetasaconstantotherwiseboththememoryandthetimecomplexitywillbeonlogkthelinearityofthesizeofthesuffixautomatonwasfirstdiscoveredinbyblumeretalandinthefirstlinearalgorithmsfortheconstructionwaspresentedbycrochemoreandblumerdefinitionofasuffixautomatonasuffixautomatonforagivenstringsisaminimaldfadeterministicfiniteautomatondeterministicfinitestatemachinethatacceptsallthesuffixesofthestringsinotherwordsasuffixautomatonisanorientedacyclicgraphtheverticesarecalledstatesandtheedgesarecalledtransitionsbetweenstatesoneofthestatestistheinitialstateanditmustbethesourceofthegraphallotherstatesarereachablefromteachtransitionislabeledwithsomecharacteralltransitionsoriginatingfromastatemusthavedifferentlabelsoneormultiplestatesaremarkedasterminalstatesifwestartfromtheinitialstatetandmovealongtransitionstoaterminalstatethenthelabelsofthepassedtransitionsmustspelloneofthesuffixesofthestringseachofthesuffixesofsmustbespellableusingapathfromttoaterminalstatethesuffixautomatoncontainstheminimumnumberofverticesamongallautomatasatisfyingtheconditionsdescribedabovesubstringpropertythesimplestandmostimportantpropertyofasuffixautomatonisthatitcontainsinformationaboutallsubstringsofthestringsanypathstartingattheinitialstatetifwewritedownthelabelsofthetransitionsformsasubstringofsandconverselyeverysubstringofscorrespondstoacertainpathstartingattinordertosimplifytheexplanationswewillsaythatthesubstringscorrespondstothatpathstartingattandthelabelsspellthesubstringandconverselywesaythatanypathcorrespondstothestringspelledbyitslabelsoneormultiplepathscanleadtoastatethuswewillsaythatastatecorrespondstothesetofstringswhichcorrespondtothesepathsexamplesofconstructedsuffixautomataherewewillshowsomeexamplesofsuffixautomataforseveralsimplestringswewilldenotetheinitialstatewithblueandtheterminalstateswithgreenforthestringssuffixautomatonforforthestringsasuffixautomatonforaforthestringsaasuffixautomatonforaaforthestringsabsuffixautomatonforabforthestringsabasuffixautomatonforabaforthestringsabbsuffixautomatonforabbforthestringsabbbsuffixautomatonforabbbconstructioninlineartimebeforewedescribethealgorithmtoconstructasuffixautomatoninlineartimeweneedtointroduceseveralnewconceptsandsimpleproofswhichwillbeveryimportantinunderstandingtheconstructionendpositionsendposconsideranynonemptysubstringtofthestringswewilldenotewithendpostthesetofallpositionsinthestringsinwhichtheoccurrencesoftendforinstancewehaveendposbcforthestringabcbcwewillcalltwosubstringstandtendposequivalentiftheirendingsetscoincideendpostendpostthusallnonemptysubstringsofthestringscanbedecomposedintoseveralequivalenceclassesaccordingtotheirsetsendpositturnsoutthatinasuffixmachineendposequivalentsubstringscorrespondtothesamestateinotherwordsthenumberofstatesinasuffixautomatonisequaltothenumberofequivalenceclassesamongallsubstringsplustheinitialstateeachstateofasuffixautomatoncorrespondstooneormoresubstringshavingthesamevalueendposwewilllaterdescribetheconstructionalgorithmusingthisassumptionwewillthenseethatalltherequiredpropertiesofasuffixautomatonexceptfortheminimalityarefulfilledandtheminimalityfollowsfromnerodestheoremwhichwillnotbeproveninthisarticlewecanmakesomeimportantobservationsconcerningthevaluesendposlemmatwononemptysubstringsuandwwithlengthulengthwareendposequivalentifandonlyifthestringuoccursinsonlyintheformofasuffixofwtheproofisobviousifuandwhavethesameendposvaluesthenuisasuffixofwandappearsonlyintheformofasuffixofwinsandifuisasuffixofwandappearsonlyintheformasasuffixinsthenthevaluesendposareequalbydefinitionlemmaconsidertwononemptysubstringsuandwwithlengthulengthwthentheirsetsendposeitherdontintersectatallorendposwisasubsetofendposuanditdependsonifuisasuffixofwornotendposwendposuendposwendposuifuisasuffixofwotherwiseproofifthesetsendposuandendposwhaveatleastonecommonelementthenthestringsuandwbothendinthatpositionieuisasuffixofwbutthenateveryoccurrenceofwalsoappearsthesubstringuwhichmeansthatendposwisasubsetofendposulemmaconsideranendposequivalenceclasssortallthesubstringsinthisclassbynonincreasinglengththenintheresultingsequenceeachsubstringwillbeoneshorterthanthepreviousoneandatthesametimewillbeasuffixofthepreviousoneinotherwordsinasameequivalenceclasstheshortersubstringsareactuallysuffixesofthelongersubstringsandtheytakeallpossiblelengthsinacertainintervalxyprooffixcomeendposequivalentclassifitonlycontainsonestringthenthelemmaisobviouslytruenowletssaythatthenumberofstringsintheclassisgreaterthanoneaccordingtolemmatwodifferentendposequivalentstringsarealwaysinsuchawaythattheshorteroneisapropersuffixofthelongeroneconsequentlytherecannotbetwostringsofthesamelengthintheequivalenceclassletsdenotebywthelongestandthroughutheshorteststringintheequivalenceclassaccordingtolemmathestringuisapropersuffixofthestringwconsidernowanysuffixofwwithalengthintheintervallengthulengthwitiseasytoseethatthissuffixisalsocontainedinthesameequivalenceclassbecausethissuffixcanonlyappearintheformofasuffixofwinthestringssincealsotheshortersuffixuoccursinsonlyintheformofasuffixofwconsequentlyaccordingtolemmathissuffixisendposequivalenttothestringwsuffixlinkslinkconsidersomestatevtintheautomatonasweknowthestatevcorrespondstotheclassofstringswiththesameendposvaluesandifwedenotebywthelongestofthesestringsthenalltheotherstringsaresuffixesofwwealsoknowthefirstfewsuffixesofastringwifweconsidersuffixesindescendingorderoftheirlengthareallcontainedinthisequivalentclassandallothersuffixesatleastoneothertheemptysuffixareinsomeotherclasseswedenotebytthebiggestsuchsuffixandmakeasuffixlinktoitinotherwordsasuffixlinklinkvleadstothestatethatcorrespondstothelongestsuffixofwthatisanotherendposequivalentclasshereweassumethattheinitialstatetcorrespondstoitsownequivalenceclasscontainingonlytheemptystringandforconveniencewesetendpostlengthslemmasuffixlinksformatreewiththeroottproofconsideranarbitrarystatevtasuffixlinklinkvleadstoastatecorrespondingtostringswithstrictlysmallerlengththisfollowsfromthedefinitionofthesuffixlinksandfromlemmathereforebymovingalongthesuffixlinkswewillsoonerorlatercometotheinitialstatetwhichcorrespondstotheemptystringlemmaifweconstructatreeusingthesetsendposbytherulethatthesetofaparentnodecontainsthesetsofallchildrenassubsetsthenthestructurewillcoincidewiththetreeofsuffixlinksproofthefactthatwecanconstructatreeusingthesetsendposfollowsdirectlyfromlemmathatanytwosetseitherdonotintersectofoneiscontainedintheotherletusnowconsideranarbitrarystatevtanditssuffixlinklinkvfromthedefinitionofthesuffixlinkandfromlemmaitfollowsthatendposvendposlinkvwhichtogetherwithwiththepreviouslemmaprovestheassertionthetreeofsuffixlinksisessentiallyatreeofsetsendposhereisanexampleofatreeofsuffixlinksinthesuffixautomatonbuildforthestringabcbcthenodesarelabeledwiththelongestsubstringfromthecorrespondingequivalenceclasssuffixautomatonforabcbcwithsuffixlinksrecapbeforeproceedingtothealgorithmitselfwerecaptheaccumulatedknowledgeandintroduceafewauxiliarynotationsthesubstringsofthestringscanbedecomposedintoequivalenceclassesaccordingtotheirendpositionsendposthesuffixautomatonconsistsoftheinitialstatetaswellasofonestateforeachendposequivalenceclassforeachstatevoneormultiplesubstringsmatchwedenotebylongestvthelongestsuchstringandthroughlenvitslengthwedenotebyshortestvtheshortestsuchsubstringanditslengthwithminlenvthenallthestringscorrespondingtothisstatearedifferentsuffixesofthestringlongestvandhaveallpossiblelengthsintheintervalminlengthvlenvforeachstatevtasuffixlinkisdefinedasalinkthatleadstoastatethatcorrespondstothesuffixofthestringlongestvoflengthminlenvthesuffixlinksformatreewiththerootintandatthesametimethistreeformsaninclusionrelationshipbetweenthesetsendposwecanexpressminlenvforvtusingthesuffixlinklinkvasminlenvlenlinkvifwestartfromanarbitrarystatevandfollowthesuffixlinksthensoonerorlaterwewillreachtheinitialstatetinthiscaseweobtainasequenceofdisjointintervalsminlenvilenviwhichinunionformsthecontinuousintervallenvalgorithmnowwecanproceedtothealgorithmitselfthealgorithmwillbeonlineiewewilladdthecharactersofthestringonebyoneandmodifytheautomatonaccordinglyineachsteptoachievelinearmemoryconsumptionwewillonlystorethevalueslenlinkandalistoftransitionsineachstatewewillnotlabelterminalstatesbutwewilllatershowhowtoarrangetheselabelsafterconstructingthesuffixautomatoninitiallytheautomatonconsistsofasinglestatetwhichwillbetheindextheremainingstateswillreceivetheindicesweassignitlenandlinkforconveniencewillbeafictionalnonexistingstatenowthewholetaskboilsdowntoimplementingtheprocessofaddingonecharacterctotheendofthecurrentstringletusdescribethisprocessletlastbethestatecorrespondingtotheentirestringbeforeaddingthecharactercinitiallywesetlastandwewillchangelastinthelaststepofthealgorithmaccordinglycreateanewstatecurandassignitwithlencurlenlastthevaluelinkcurisnotknowatthetimenowwetothefollowingprocedurewestartatthestatelastwhilethereisntatransitionthroughthelettercwewilladdatransitiontothestatecurandfollowthesuffixlinkifatsomepointtherealreadyexistsatransitionthroughthelettercthenwewillstopanddenotethisstatewithpifithaventfoundsuchastatepthenwereachedthefictitiousstatethenwecanjustassignlinkcurandleavesupposenowthatwehavefoundastatepfromwhichthereexistsatransitionthroughthelettercwewilldenotethestatetowhichthetransitionleadswithqnowwehavetwocaseseitherlenplenqornotiflenplenqthenwecansimplyassignlinkcurqandleaveotherwiseitisabitmorecomplicateditisnecessarytoclonethestateqwecreateanewstateclonecopyallthedatafromqsuffixlinkandtransitionexceptthevaluelenwewillassignlenclonelenpaftercloningwedirectthesuffixlinkfromcurtocloneandalsofromqtoclonefinallyweneedtowalkfromthestatepbackusingsuffixlinksaslongasthereisatransitionthroughctothestateqandredirectallthosetothestatecloneinanyofthethreecasesaftercompletingtheprocedureweupdatethevaluelastwiththestatecurifwealsowanttoknowwhichstatesareterminalandwhicharenotthewecanfindallterminalstatesafterconstructingthecompletesuffixautomatonfortheentirestringstodothiswetakethestatecorrespondingtotheentirestringstoredinthevariablelastandfollowitssuffixlinksuntilwereachtheinitialstatewewillmarkallvisitedstatesasterminalitiseasytounderstandthatbydoingsowewillmarkexactlythestatescorrespondingtoallthesuffixesofthestringswhichareexactlytheterminalstatesinthenextsectionwewilllookindetailateachstepandshowitscorrectnesshereweonlynotethatsinceweonlycreateoneortwonewstatesforeachcharacterofsthesuffixautomatoncontainsalinearnumberofstatesthelinearityofthenumberoftransitionsandingeneralthelinearityoftheruntimeofthealgorithmislessclearandtheywillbeprovenafterweprovedthecorrectnesscorrectnesswewillcallatransitionpqcontinuousiflenplenqotherwiseiewhenlenplenqthetransitionwillbecallednoncontinuousaswecanseefromthedescriptionofthealgorithmcontinuousandnoncontinuoustransitionswillleadtodifferentcasesofthealgorithmcontinuoustransitionsarefixedandwillneverchangeagainincontrastnoncontinuoustransitionmaychangewhennewlettersareaddedtothestringtheendofthetransitionedgemaychangetoavoidambiguitywewilldenotethestringforwhichthesuffixautomatonwasbuiltbeforeaddingthecurrentcharactercwithsthealgorithmbeginswithcreatinganewstatecurwhichwillcorrespondtotheentirestringscitisclearwhywehavetocreateanewstatetogetherwiththenewcharacteranewequivalenceclassiscreatedaftercreatinganewstatewetraversebysuffixlinksstartingfromthestatecorrespondingtotheentirestringsforeachstatewetrytoaddatransitionwiththecharacterctothenewstatecurthusweappendtoeachsuffixofsthecharacterchoweverwecanonlyaddthesenewtransitionsiftheydontconflictwithanalreadyexistingonethereforeassoonaswefindanalreadyexistingtransitionwithcwehavetostopinthesimplestcasewereachedthefictitiousstatethismeansweaddedthetransitionwithctoallsuffixesofsthisalsomeansthatthecharacterchasntbeenpartofthestringsbeforethereforethesuffixlinkofcurhastoleadtothestateinthesecondcasewecameacrossanexistingtransitionpqthismeansthatwetriedtoaddastringxcwherexisasuffixofstothemachinethatalreadyexistsinthemachinethestringxcalreadyappearsasasubstringofssinceweassumethattheautomatonforthestringsisbuildcorrectlyweshouldnotaddanewtransitionherehoweverthereisadifficultytowhichstateshouldthesuffixlinkfromthestatecurleadwehavetomakeasuffixlinktoastateinwhichthelongeststringisexactlyxciethelenofthisstateshouldbelenphoweveritispossiblethatsuchastatedoesntyetexistsielenqlenpinthiscasewehavetocreatesuchastatebysplittingthestateqifthetransitionpqturnsouttobecontinuousthenlenqlenpinthiscaseeverythingissimplewedirectthesuffixlinkfromcurtothestateqotherwisethetransitionisnoncontinuousielenqlenpthismeansthatthestateqcorrespondstonotonlythesuffixofscwithlengthlenpbutalsotolongersubstringsofswecandonothingotherthansplittingthestateqintotwosubstatessothatthefirstonehaslengthlenphowcanwesplitastateweclonethestateqwhichgivesusthestatecloneandwesetlenclonelenpwecopyallthetransitionsfromqtoclonebecausewedontwanttochangethepathsthattraversethroughqalsowesetthesuffixlinkfromclonetothetargetofthesuffixlinkofqandsetthesuffixlinkofqtocloneandaftersplittingthestatewesetthesuffixlinkfromcurtocloneinthelaststepwechangesomeofthetransitionstoqweredirectthemtoclonewhichtransitionsdowehavetochangeitisenoughtoredirectonlythetransitionscorrespondingtoallthesuffixesofthestringwcwherewisthelongeststringofpieweneedtocontinuetomovealongthesuffixlinksstartingfromthevertexpuntilwereachthefictitiousstateoratransitionthatleadstoadifferentstatethanqlinearnumberofoperationsfirstweimmediatelymaketheassumptionthatthesizeofthealphabetisconstantifthisisnotthecasethenitwillnotbepossibletotalkaboutthelineartimecomplexitythelistoftransitionsfromonevertexwillbestoredinabalancedtreewhichallowsyoutoquicklyperformkeysearchoperationsandaddingkeysthereforeifwedenotewithkthesizeofthealphabetthentheasymptoticbehaviorofthealgorithmwillbeonlogkwithonmemoryhoweverifthealphabetissmallenoughthenyoucansacrificememorybyavoidingbalancedtreesandstorethetransitionsateachvertexasanarrayoflengthkforquicksearchingbykeyandadynamiclisttoquicklytraverseallavailablekeysthuswereachtheontimecomplexityforthealgorithmbutatacostofonkmemorycomplexitysowewillconsiderthesizeofthealphabettobeconstantieeachoperationofsearchingforatransitiononacharacteraddingatransitionsearchingforthenexttransitionalltheseoperationscanbedoneinoifweconsiderallpartsofthealgorithmthenitcontainsthreeplacesinthealgorithminwhichthelinearcomplexityisnotobviousthefirstplaceisthetraversalthroughthesuffixlinksfromthestatelastaddingtransitionswiththecharactercthesecondplaceisthecopyingoftransitionswhenthestateqisclonedintoanewstateclonethirdplaceischangingthetransitionleadingtoqredirectingthemtocloneweusethefactthatthesizeofthesuffixautomatonbothinnumberofstatesandinthenumberoftransitionsislineartheproofofthelinearityofthenumberofstatesisthealgorithmitselfandtheproofoflinearityofthenumberofstatesisgivenbelowaftertheimplementationofthealgorithmthusthetotalcomplexityofthefirstandsecondplacesisobviousafteralleachoperationaddsonlyoneamortizednewtransitiontotheautomatonitremainstoestimatethetotalcomplexityofthethirdplaceinwhichweredirecttransitionsthatpointedoriginallytoqtoclonewedenotevlongestpthisisasuffixofthestringsandwitheachiterationitslengthdecreasesandthereforethepositionvasthesuffixofthestringsincreasesmonotonicallywitheachiterationinthiscaseifbeforethefirstiterationoftheloopthecorrespondingstringvwasatthedepthkkfromlastbycountingthedepthasthenumberofsuffixlinksthenafterthelastiterationthestringvcwillbeathsuffixlinkonthepathfromcurwhichwillbecomethenewvaluelastthuseachiterationofthisloopleadstothefactthatthepositionofthestringlongestlinklinklastassuffixofthecurrentstringwillmonotonicallyincreasethereforethiscyclecannotbeexecutedmorethanniterationswhichwasrequiredtoproveimplementationfirstwedescribeadatastructurethatwillstoreallinformationaboutaspecifictransitionlenlinkandthelistoftransitionsifnecessaryyoucanaddaterminalflaghereaswellasotherinformationwewillstorethelistoftransitionsintheformofamapwhichallowsustoachievetotalonmemoryandonlogktimeforprocessingtheentirestringstructstateintlenlinkmapcharintnextthesuffixautomatonitselfwillbestoredinanarrayofthesestructuresstatewestorethecurrentsizeszandalsothevariablelastthestatecorrespondingtotheentirestringatthemomentconstintmaxlenstatestmaxlenintszlastwegiveafunctionthatinitializesasuffixautomatoncreatingasuffixautomatonwithasinglestatevoidsa_initstlenstlinkszlastandfinallywegivetheimplementationofthemainfunctionwhichaddsthenextcharactertotheendofthecurrentlinerebuildingthemachineaccordinglyvoidsa_extendcharcintcurszstcurlenstlastlenintplastwhilepstpnextcountcstpnextccurpstplinkifpstcurlinkelseintqstpnextcifstplenstqlenstcurlinkqelseintcloneszstclonelenstplenstclonenextstqnextstclonelinkstqlinkwhilepstpnextcqstpnextcclonepstplinkstqlinkstcurlinkclonelastcurasmentionedaboveifyousacrificememoryonkwherekisthesizeofthealphabetthenyoucanachievethebuildtimeofthemachineinonevenforanyalphabetsizekbutforthisyouwillhavetostoreanarrayofsizekineachstateforquicklyjumpingtothetransitionoftheletterandadditionalalistofalltransitionstoquicklyiterateoverthetransitionsthemadditionalpropertiesnumberofstatesthenumberofstatesinasuffixautomatonofthestringsoflengthndoesntexceednforntheproofistheconstructionalgorithmitselfsinceinitiallytheautomatonconsistsofonestateandinthefirstandseconditerationonlyasinglestatewillbecreatedandintheremainingnstepsatmoststateswillbecreatedeachhoweverwecanalsoshowthisestimationwithoutknowingthealgorithmletusrecallthatthenumberofstatesisequaltothenumberofdifferentsetsendposinadditionthesessetsendposformatreeaparentvertexcontainsallchildrensetsinhissetconsiderthistreeandtransformitalittlebitaslongasithasaninternalvertexwithonlyonechildwhichmeansthatthesetofthechildmissesatleastonepositionfromtheparentsetwecreateanewchildwiththesetofthemissingpositionsintheendwehaveatreeinwhicheachinnervertexhasadegreegreaterthanoneandthenumberofleavesdoesnotexceednthereforetherearenomorethannverticesinsuchatreethisboundofthenumberofstatescanactuallybeachievedforeachnapossiblestringisabbbbbbineachiterationstartingatthethirdonethealgorithmwillsplitastateresultinginexactlynstatesnumberoftransitionsthenumberoftransitionsinasuffixautomatonofastringsoflengthndoesntexceednfornletusprovethisletusfirstestimatethenumberofcontinuoustransitionsconsideraspanningtreeofthelongestpathsintheautomatonstartinginthestatetthisskeletonwillconsistofonlythecontinuousedgesandthereforetheirnumberislessthanthenumberofstatesieitdoesnotexceednnowletusestimatethenumberofnoncontinuoustransitionsletthecurrentnoncontinuoustransitionbepqwiththecharactercwetakethecorrespondentstringucwwherethestringucorrespondstothelongestpathfromtheinitialstatetopandwtothelongestpathfromqtoanyterminalstateononehandeachsuchstringucwforeachincompletestringswillbedifferentsincethestringsuandwareformedonlybycompletetransitionsontheotherhandeachsuchstringucwbythedefinitionoftheterminalstateswillbeasuffixoftheentirestringssincethereareonlynnonemptysuffixesofsandnonofthestringsucwcancontainsbecausetheentirestringonlycontainscompletetransitionsthetotalnumberofincompletetransitionsdoesnotexceedncombiningthesetwoestimatesgivesustheboundnhoweversincethemaximumnumberofstatescanonlybeachievedwiththetestcaseabbbbbbandthiscasehasclearlylessthanntransitionswegetthetighterboundofnforthenumberoftransitionsinasuffixautomatonthisboundcanalsobeachievedwiththestringabbbbbbcapplicationsherewelookatsometasksthatcanbesolvedusingthesuffixautomatonforthesimplicityweassumethatthealphabetsizekisconstantwhichallowsustoconsiderthecomplexityofappendingacharacterandthetraversalasconstantcheckforoccurrencegivenatexttandmultiplepatterspwehavetocheckwhetherornotthestringspappearasasubstringoftwebuildasuffixautomatonofthetexttinolengthttimetocheckifapatternpappearsintwefollowthetransitionsstartingfromtaccordingtothecharactersofpifatsomepointtheredoesntexistsatransitionthenthepatternpdoesntappearasasubstringoftifwecanprocesstheentirestringpthiswaythenthestringappearsintitisclearthatthiswilltakeolengthptimeforeachstringpmoreoverthealgorithmactuallyfindsthelengthofthelongestprefixofpthatappearsinthetextnumberofdifferentsubstringsgivenastringsyouwanttocomputethenumberofdifferentsubstringsletusbuildasuffixautomatonforthestringseachsubstringofscorrespondstosomepathintheautomatonthereforethenumberofdifferentsubstringsisequaltothenumberofdifferentpathsintheautomatonstartingattgiventhatthesuffixautomatonisadirectedacyclicgraphthenumberofdifferentwayscanbecomputedusingdynamicprogrammingnamelyletdvbethenumberofwaysstartingatthestatevincludingthepathoflengthzerothenwehavetherecursiondvwvwcdawgdwiedvcanbeexpressedasthesumofanswersforallendsofthetransitionsofvthenumberofdifferentsubstringsisthevaluedtsincewedontcounttheemptysubstringtotaltimecomplexityolengthstotallengthofalldifferentsubstringsgivenastringswewanttocomputethetotallengthofallitsvarioussubstringsthesolutionissimilartothepreviousoneonlynowitisnecessarytoconsidertwoquantitiesforthedynamicprogrammingpartthenumberofdifferentsubstringsdvandtheirtotallengthansvwealreadydescribedhowtocomputedvintheprevioustaskthevalueansvcanbecomputedusingtherecursionansvwvwcdawgdwanswwetaketheanswerofeachadjacentvertexwandaddtoitdwsinceeverysubstringsisonecharacterlongerwhenstartingfromthestatevagainthistaskcanbecomputedinolengthstimelexicographicallykthsubstringgivenastringswehavetoanswermultiplequeriesforeachgivennumberkiwehavetofindthekithstringinthelexicographicallyorderedlistofallsubstringsthesolutionofthisproblemisbasedontheideaoftheprevioustwoproblemsthelexicographicallykthsubstringcorrespondstothelexicographicallykthpathinthesuffixautomatonthereforeaftercountingthenumberofpathsfromeachstatewecaneasilysearchforthekthpathstartingfromtherootoftheautomatonthistakesolengthstimeforpreprocessingandthenolengthanskforeachquerywhereansistheanswerforthequeryandkisthesizeofthealphabetsmallestcyclicshiftgivenastringswewanttofindthelexicographicallysmallestcyclicshiftweconstructasuffixautomatonforthestringssthentheautomatonwillcontaininitselfaspathsallthecyclicshiftsofthestringsconsequentlytheproblemisreducedtofindingthelexicographicallysmallestpathoflengthlengthswhichcanbedoneinatrivialwaywestartintheinitialstateandgreedilypassthroughthetransitionswiththeminimalcharactertotaltimecomplexityisolengthsnumberofoccurrencesforagiventexttwehavetoanswermultiplequeriesforeachgivenpatternpwehavetofindouthowmanytimesthestringpappearsinthestringtassubstringweconstructthesuffixautomatonforthetexttnextwedothefollowingpreprocessingforeachstatevintheautomatonwecalculatethenumbercntvthatisequaltothesizeofthesetendposvinfactallstringscorrespondingtothesamestatevappearinthetexttanequalamountoftimeswhichisequaltothenumberofpositionsinthesetendposhoweverwecannotconstructthesetsendposexplicitlythereforeweonlyconsidertheirsizescnttocomputethemweproceedasfollowsforeachstateifitwasnotcreatedbycloningandifitisnottheinitialstatetweinitializeitwithcntthenwewillgothroughallstatesindecreasingorderoftheirlengthlenandaddthecurrentvaluecntvtothesuffixlinkscntlinkvcntvthisgivesthecorrectvalueforeachstatewhyisthiscorrectthetotalstatsobtainednotobtainedbycloningareexactlylengthtandthefirstiofthemappearedwhenweaddedthefirsticharactersconsequentlyforeachofthesestateswecountthecorrespondingpositionatwhichitwasprocessedthereforeinitiallywehavecntforeachsuchstateandcntforallotherthenweapplythefollowingoperationforeachvcntlinkvcntvthemeaningbehindthisisthatifastringvappearscntvtimesthenalsoallitssuffixesappearattheexactsameendpositionsthereforealsocntvtimeswhydontweovercountinthisprocedureiedontcountsomepositiontwicebecauseweaddthepositionsofastatetoonlyoneotherstatesoitcannothappenthatonestatedirectsitspositionstoanotherstatetwiceintwodifferentwaysthuswecancomputethequantitiescntforallstatesintheautomatoninolengthttimeafterthatansweringaquerybyjustlookingupthevaluecnttwheretisthestatecorrespondingtothepatternifsuchastateexistsotherwiseanswerwithansweringaquerytakesolengthptimefirstoccurrencepositiongivenatexttandmultiplequeriesforeachquerystringpwewanttofindthepositionofthefirstoccurrenceofpinthestringtthepositionofthebeginningofpweagainconstructasuffixautomatonadditionallyweprecomputethepositionfirstposforallstatesintheautomatonieforeachstatevwewanttofindthepositionfirstposvoftheendofthefirstoccurrenceinotherwordswewanttofindinadvancetheminimalelementofeachsetendpossinceobviouslycannotmaintainallsetsendposexplicitlytomaintainthesepositionsfirstposweextendthefunctionsa_extendwhenwecreateanewstatecurwesetfirstposcurlencurandwhenwecloneavertexqasclonewesetfirstposclonefirstposqsincetheonlyotheroptionforavaluewouldbefirstposcurwhichisdefinitelytoobigthustheanswerforaqueryissimplyfirstpostlengthpwheretisthestatecorrespondingtothestringpansweringaqueryagaintakesonlyolengthptimealloccurrencepositionsthistimewehavetodisplayallpositionsoftheoccurrencesinthestringtagainweconstructasuffixautomatonforthetexttsimilarasintheprevioustaskwecomputethepositionfirstposforallstatesclearlyfirstpostispartoftheansweriftisthestatecorrespondingtoaquerystringpsowetookintoaccountthestateoftheautomatoncontainingpwhatotherstatesdoweneedtotakeintoaccountallstatesthatcorrespondtostringsforwhichpisasuffixinotherwordsweneedtofindallthestatesthatcanreachthestatetviasuffixlinksthereforetosolvetheproblemweneedtosaveforeachstatealistofsuffixreferencesleadingtoittheanswertothequerythenwillthencontainallfirstposforeachstatethatwecanfindonadfsbfsstartingfromthestatetusingonlythesuffixreferencesthisworkaroundwillworkintimeoanswerpbecausewewillnotvisitastatetwicebecauseonlyonesuffixlinkleaveseachstatesotherecannotbetwodifferentpathsleadingtothesamestateweonlymusttakeintoaccountthattwodifferentstatescanhavethesamefirstposvaluethishappensifonestatewasobtainedbycloninganotherhoweverthisdoesntruinthecomplexitysinceeachstatecanonlyhaveatmostoneclonemoreoverwecanalsogetridoftheduplicatepositionsifwedontoutputthepositionsfromtheclonedstatesinfactastatethataclonedstatecanreachisalsoreachablefromtheoriginalstatethusifweremembertheflagis_clonedforeachstatewecansimplyignoretheclonedstatesandonlyoutputfirstposforallotherstatesherearesomeimplementationsketchesstructstateboolis_cloneintfirst_posvectorintinv_linkafterconstructingtheautomatonforintvvszvststvlinkinv_linkpush_backvoutputallpositionsofoccurrencesvoidoutput_all_occurrencesintvintp_lengthifstvis_clonecoutstvfirst_posp_lengthendlforintustvinv_linkoutput_all_occurrencesup_lengthshortestnonappearingstringgivenastringsandacertainalphabetwehavetofindastringofsmallestlengththatdoesntappearinswewillapplydynamicprogrammingonthesuffixautomatonbuiltforthestringsletdvbetheanswerforthenodeviewealreadyprocessedpartofthesubstringarecurrentlyinthestatevandwanttofindthesmallestnumberofcharactersthathavetobeaddedtofindanonexistenttransitioncomputingdvisverysimpleifthereisnottransitionusingatleastonecharacterofthealphabetthendvotherwiseonecharacterisnotenoughandsoweneedtotaketheminimumofallanswersofalltransitionsdvminwvwcsadwtheanswertotheproblemwillbedtandtheactualstringcanberestoredusingthecomputedarraydlongestcommonsubstringoftwostringsgiventwostringssandtwehavetofindthelongestcommonsubstringiesuchastringxthatappearsassubstringinsandalsointweconstructasuffixautomatonforthestringswewillnowtakethestringtandforeachprefixlookforthelongestsuffixofthisprefixinsinotherwordsforeachpositioninthestringtwewanttofindthelongestcommonsubstringofsandtendinginthatpositionforthiswewillusetwovariablesthecurrentstatevandthecurrentlengthlthesetwovariableswilldescribethecurrentmatchingpartitslengthandthestatethatcorrespondstoitinitiallyvtandliethematchisemptynowletusdescribehowwecanaddacharactertiandrecalculatetheanswerforitifthereisatransitionfromvwiththecharactertithenwesimplyfollowthetransitionandincreaselbyoneifthereisnosuchtransitionwehavetoshortenthecurrentmatchingpartwhichmeansthatweneedtofollowthesuffixlinkvlinkvatthesametimethecurrentlengthhastobeshortenedobviouslyweneedtoassignllenvsinceafterpassingthroughthesuffixlinkweendupinstatewhosecorrespondinglongeststringisasubstringifthereisstillnotransitionusingtherequiredcharacterwerepeatandagaingothroughthesuffixlinkanddecreaseluntilwefindatransitionorwereachthefictionalstatewhichmeansthatthesymboltidoesntappearatallinssoweassignvltheanswertothetaskwillbethemaximumofallthevalueslthecomplexityofthispartisolengthtsinceinonemovewecaneitherincreaselbyoneormakeseveralpassesthroughthesuffixlinkseachoneendsupreducingthevaluelimplementationstringlcsstringsstringtsa_initforintiissizeisa_extendsiintvlbestbestposforintiitsizeiwhilevstvnextcounttivstvlinklstvlengthifstvnextcounttivstvnexttiliflbestbestlbestposireturntsubstrbestposbestbestlargestcommonsubstringofmultiplestringstherearekstringssigivenwehavetofindthelongestcommonsubstringiesuchastringxthatappearsassubstringineachstringsiwejoinallstringsintoonelargestringtseparatingthestringsbyaspecialcharactersdioneforeachstringtsdsdskdkthenweconstructthesuffixautomatonforthestringtnowweneedtofindastringinthemachinewhichiscontainedinallthestringssiandthiscanbedonebyusingthespecialaddedcharactersnotethatifasubstringisincludedinsomestringsjtheninthesuffixautomatonexistsapathstartingfromthissubstringcontainingthecharacterdjandnotcontainingtheothercharactersddjdjdkthusweneedtocalculatetheattainabilitywhichtellsusforeachstateofthemachineandeachsymboldiifthereexistssuchapaththiscaneasilybecomputedbydfsorbfsanddynamicprogrammingafterthattheanswertotheproblemwillbethestringlongestvforthestatevfromwhichthepathswereexistsforallspecialcharacterspracticeproblemsspojsublexctranslationbyhttpgithubcomemaxxeng